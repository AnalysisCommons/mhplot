#!/bin/bash
# mhplot 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of datafile: '${datafile[@]}'"
    echo "Value of snpinfofile: '${snpinfofile[@]}'"
    echo "Value of label: '$label'"
    echo "Value of output_type: '$output_type'"
    echo "Value of p_col: '$p_col'"
    echo "Value of gene_col: '$gene_col'"
    echo "Value of chr_col: '$chr_col'"
    echo "Value of pos_col: '$pos_col'"
    echo "Value of snp_col: '$snp_col'"
    echo "Value of chr_labels: '$chr_labels'"
    echo "Value of filter: '$filter'"
    echo "Value of mh_color: '${mh_color[@]}'"
    echo "Value of suggestive_line: '$suggestive_line'"
    echo "Value of genomewide_line: '$genomewide_line'"
    echo "Value of highlight: '${highlight[@]}'"
    echo "Value of logp: '$logp'"
    echo "Value of main_title: '$main_title'"

    # Check if 1 or 22 datafiles. Can enter 1 for all chr or 22 for each chr.
    df_length=${#datafile[@]}
    if [[ "$df_length" != 1 && "$df_length" != 22 ]] ; then
	echo "Number of datafiles must be 1 or 22."
	exit
    fi
    # Check if number of datafiles matches the number of snpinfo files
    if [[ "$df_length" != "${#snpinfofile[@]}" ]] ; then
        echo "Number of datafiles does not match number of snpinfo files."
	# exit
    fi

    # Download input files and check in directory
    dx-download-all-inputs

    # snpinforesults=(*.Rdata)
    if [[ "${#snpinfofile[@]}" -gt "0" ]] ; then
        snpinforesults=( in/snpinfofile/*/* )
    fi

    ### tar files not implemented at this time
    # Check filetype extension inside first folder of in/datafile
    # file0=( in/datafile/00/* )
    # ext=${file0##*.}
    # echo "File0: $file0, Ext: $ext"

    # If datafiles were tarred, untar them
    # if [[ "$ext" == "tar" ]] ; then
    #     tar xvf in/datafile/*/*tar
    # fi

    # wait

    # if ls in/datafile/*/*tar &>/dev/null ; then
    #     rm *tar
    # fi

    seqmetaresults=( in/datafile/*/* )
    echo ${seqmetaresults[@]}

    echo "Running Rscript..."

    Rscript /mhplot.R "$p_col;$gene_col;$chr_col;$pos_col;$snp_col;$chr_labels;$filter;$suggestive_line;$genomewide_line;${highlight[@]};$logp;$main_title;${mh_color[@]};${seqmetaresults[@]};$output_type"

    ls -sh

    mv mh.${output_type} ${label}_mh.${output_type}

    mhplot_sing=$(dx upload ${label}_mh.${output_type} --brief)

    dx-jobutil-add-output mhplot "$mhplot_sing" --class=file
}
